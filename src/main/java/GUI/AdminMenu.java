package GUI;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import database.MySQLManager;
import entities.User;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.reflect.Array;
import java.sql.SQLException;
import java.util.HashMap;

public class AdminMenu {
    private JButton addBookButton;
    private JPanel panel1;
    private JButton changeBookButton;
    private JButton changeUserButton;
    private JPanel root;
    private JButton viewBlacklistButton;

    public AdminMenu() {
        addBookButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                AddBook addBook = new AddBook(AdminMenu.this.$$$getRootComponent$$$());
                root.removeAll();
                root.add(addBook.$$$getRootComponent$$$());
                root.updateUI();
            }
        });
        changeBookButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                SearchForm searchForm = new SearchForm(ItemToChange.class.getName(), null);
                root.removeAll();
                root.add(searchForm.$$$getRootComponent$$$());
                root.updateUI();
            }
        });
        changeUserButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                SearchUser searchUser = new SearchUser();
                root.removeAll();
                root.add(searchUser.$$$getRootComponent$$$());
                root.updateUI();
            }
        });
        viewBlacklistButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JPanel black = new JPanel(new GridLayout(0, 1, 0, 20));
                MySQLManager manager = new MySQLManager();
                HashMap<User, String> blacks = new HashMap<User, String>();
                try {
                    blacks.putAll(manager.getBlackList());
                } catch (SQLException throwables) {
                    throwables.printStackTrace();
                }
                for (User usr : blacks.keySet()) {
                    black.add(new BlacklistItem(usr, blacks.get(usr)).$$$getRootComponent$$$());
                }
                root.removeAll();
                root.add(black);
                root.updateUI();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new BorderLayout(0, 0));
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        root.add(panel1, BorderLayout.CENTER);
        addBookButton = new JButton();
        addBookButton.setText("Add book");
        panel1.add(addBookButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        changeBookButton = new JButton();
        changeBookButton.setText("Change book");
        panel1.add(changeBookButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        changeUserButton = new JButton();
        changeUserButton.setText("Change user");
        panel1.add(changeUserButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        viewBlacklistButton = new JButton();
        viewBlacklistButton.setText("View blacklist");
        panel1.add(viewBlacklistButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

}
